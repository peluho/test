import os  # importing os library
import glob  # importing glob library
import re
import time, datetime
import math
time_start = datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S")
user = os.getlogin()

input_folder = '20230316_181757'
path_input = '\\\\io-ws-ccstore1\\03.Ansys\\04_pythonScripts\\02_Landa_N_Plot\\09_Output\\' + input_folder +'\\'
pathDB = '\\\\io-ws-ccstore1\\03.Ansys\\02_5F\\01_Config1\\01_DB\\'
path_out = '\\\\io-ws-ccstore1\\03.Ansys\\04_pythonScripts\\02_Landa_N_Plot\\09_Output\\'
path_Macros = '\\\\io-ws-ccstore1\\03.Ansys\\04_pythonScripts\\02_Landa_N_Plot\\09_Output\\new_plots\\'
if not os.path.exists(os.path.join(path_out,'new_plots')):
    os.makedirs(os.path.join(path_out,'new_plots'))

#Change to the first directory
os.chdir(path_input)

print('Using glob.iglob()')
search_term = '**\\*h46*.inp'

folders = []
files = []
for path in glob.iglob(path_input + search_term,recursive=True):
    dirname, filename = os.path.split(path)
    folders.append(dirname)
    files.append(filename)

root = list()
ext = list()
for val in files:
    root.append(os.path.splitext(val)[0])
    ext.append(os.path.splitext(val)[1])
# print(root, ext)


pattern = {'B2':11,'LB':11,'BIO':{'Bioshield_SE':22,'Bioshield_EN':20,'Bioshield_NW':19,'Bioshield_WS':23,},
            'CROWN':{'Short_CW_0_20': [0,20,'Short','SCW'],'Short_CW_80_100':[80,100,'Short','SCW'],
            'Short_CW_160_180':[160,180,'Short','SCW'],'Short_CW_280_300':[280,300,'Short','SCW'],
            'Long_CW_40_60':[40,60,'Long','LCW'],'Long_CW_320_340':[320,340,'Long','LCW'],
            'RW_0':[0],'RW_20':[20],'RW_40':[40],'RW_60':[60],'RW_80':[80],'RW_100':[100],'RW_120':[120],
            'RW_140':[140],'RW_160':[160],'RW_180':[180],'RW_200':[200],'RW_220':[220],'RW_240':[240],
            'RW_260':[260],'RW_280':[280],'RW_300':[300],'RW_320':[320],'RW_340':[340],
                    }}
for element,view in pattern.items():
    structure = []
    for item in root:
        if element in item:
            structure.append(item)
    folder = []
    for elem in folders:
        if element in elem:
            folder.append(elem)
            # print(elem)
    # print(folder)
    names = []
    for name in structure:
        names.append(structure[structure.index(name)].replace('_Rh46Results', '', 1).replace('M1M2-M1M2','M1M2',1).replace('CAT_I_II','cII',1).replace('CAT_III_IV','cIV',1).replace('CAT_V','cV',1).replace('-SmAvg','',1).replace('WS_WOS','ENV',1).replace('-5X5F','',1))

    lineplan = {'B2':{'Xmin':-55,'Xmax':55,'Ymin':-45,'Ymax':50,'Zmin':-12.35,'Zmax':-12.35,},
                 'LB': {'Xmin': -55, 'Xmax': 55, 'Ymin': -45, 'Ymax': 50, 'Zmin': -13.97, 'Zmax': -13.97, },
                 'Bioshield_SE': {'Xmin': 0, 'Xmax': 15.235, 'Ymin': -15.004, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                 'Bioshield_EN': {'Xmin': 0, 'Xmax': 15.235, 'Ymin': 15.004, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                 'Bioshield_NW': {'Xmin': -15.235, 'Xmax': 0, 'Ymin': 0, 'Ymax': 15.004, 'Zmin': -12.35, 'Zmax': -5.5,},
                 'Bioshield_WS': {'Xmin': -15.235, 'Xmax': 0, 'Ymin': 0, 'Ymax': -15.004, 'Zmin': -12.35, 'Zmax': -5.5,},
                'Short_CW_0_20':{'Xmin': 0, 'Xmax': 15.235, 'Ymin': 15.004, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                'Short_CW_80_100':{'Xmin': -15, 'Xmax': 15, 'Ymin': 0, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                'Short_CW_160_180':{'Xmin': -15.235, 'Xmax': 0, 'Ymin': 0, 'Ymax': 15.004, 'Zmin': -12.35, 'Zmax': -5.5,},
                'Short_CW_280_300':{'Xmin': 0, 'Xmax': 15.235, 'Ymin': -15.004, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                'Long_CW_40_60':{'Xmin': 0, 'Xmax': 15.235, 'Ymin': 15.004, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                'Long_CW_320_340':{'Xmin': 0, 'Xmax': 15.235, 'Ymin': -15.004, 'Ymax': 0, 'Zmin': -12.35, 'Zmax': -5.5,},
                }
    circular_walls_view = {'Short_CW_0_20':{'bb': 170,'cc': -10,'dd':4.31504062816,'ee':0.825090282390},
                           'Short_CW_80_100':{'bb':90,'cc':-90,'dd':-0.726625362900E-01,'ee':2.68820594049},
                           'Short_CW_160_180':{'bb':10,'cc':-10,'dd':-0.549202160984,'ee':-0.151133129637E-01},
                           'Short_CW_280_300':{'bb':110,'cc':70,'dd':0.127381808570,'ee':0.231126675956},
                           'Long_CW_40_60':{'bb':130,'cc':-50,'dd':2.09483746371,'ee':2.68820594049},
                           'Long_CW_320_340':{'bb':150,'cc':30,'dd':0.748806535319E-01,'ee':0.140194675430},
                           }
    etables = ['AXS','AXI','AYS','AYI','ATR','AXSUF','AXIUF','AYSUF','AYIUF','ATRUF','Landa_N']

    # Genreate the MAPDL code to launch all the clusters.
    stru_elems = []
    # view = []
    if element == 'BIO':
        for bios,views in pattern[element].items():
            stru_elems.append(bios)
            # view.append(views)
            # print(view)
    elif element == 'CROWN':
        for cw,views in pattern[element].items():
            stru_elems.append(cw)
    else:
        stru_elems.append(element)
    for stru_elem in stru_elems:

        if  re.search(r'Bioshield', stru_elem):
            f = open(os.path.join(path_out, 'new_plots') + '\\Plot_' + element + '.inp', 'w')
        elif re.search(r'CW|RW',stru_elem):
            f = open(os.path.join(path_out, 'new_plots') + '\\Plot_' + element + '.inp', 'w')
        else:
            f = open(os.path.join(path_out, 'new_plots') + '\\Plot_' + stru_elem + '.inp', 'w')
        f.write('fini $ /cle' + '\n')
        f.write('resume,Tokamak_Model_Reinforcement,db,' + pathDB + '   !Any DB is working' + '\n')
        f.write('/post1' + '\n')
        f.write('*get,twall,active,,time,wall  !saves the wall time before solution' + '\n')
        f.write('*get,tcpubefore,active,,time,CPU !saves the CPU time before solution' + '\n')
        f.write('! Path were *.inp were extracted from:' + str(path_input) + '\n')
        f.write('\n')
        f.write('! Components of the structural element to be plotted:  ' + element + '\n')
        if stru_elem == 'LB':
            view = pattern[stru_elem]
            f.write('!!Selection of the lower basemat - LB slab' + '\n')
            f.write('csys, 1' + '\n')
            f.write('esel,,real,,51' + '\n')
            f.write('esel,r,ename,,43' + '\n')
            f.write('!esel, r, cent, x, 0, 31' + '\n')
            f.write('csys, 0' + '\n')
            f.write('cm,'+ stru_elem + ',elem' + '\n')
            f.write('\n')
            f.write('!!Selection of the lower basemat for Configuration 2- LB slab' + '\n')
            f.write('csys, 1' + '\n')
            f.write('esel,,real,,51' + '\n')
            f.write('esel,r,ename,,43' + '\n')
            f.write('esel, r, cent, x, 0, 31' + '\n')
            f.write('csys, 0' + '\n')
            f.write('cm,' + stru_elem + '_C2,elem' + '\n')
            f.write('usePartialResults=1' + '\n')
            f.write( '\n')
            f.write('!!Selection of the lower basemat SHEAR - Shear LB slab' + '\n')
            f.write('esel,s,cent,z,-13.97,-12.35' + '\n')
            f.write('esel,r,type,,1' + '\n')
            f.write('nsle' + '\n')
            f.write('nsel,r,loc,z,-13.97' + '\n')
            f.write('nplot' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('cm,shear_' + stru_elem + ',elem' + '\n')
            f.write('\n')
        elif stru_elem == 'B2':
            view = pattern[stru_elem]
            f.write('!!Selection of the upper basemat - B2 slab' + '\n')
            f.write('csys, 1' + '\n')
            f.write('esel,, cent, z, -12.35' + '\n')
            f.write('esel,u,mat,,123,126,3 ' + '\n')
            f.write('esel,u,real,,112,113,1 ' + '\n')
            f.write('esel, r, ename,, 43' + '\n')
            f.write('csys, 0' + '\n')
            f.write('cm,'+ stru_elem + ',elem' + '\n')
            # f.write('cm,sel_stru,elem' + '\n')
            # f.write('view = 11' + '\n')
            f.write('usePartialResults=1' + '\n')
            f.write( '\n')

            f.write('\n')
            # view = pattern[stru_elem]
            f.write('!!Selection of the upper basemat for config 2- B2 slab' + '\n')
            f.write('csys, 1' + '\n')
            f.write('esel,, cent, z, -12.35' + '\n')
            f.write('esel, r, cent, x, 0, 31' + '\n')
            f.write('esel, r, ename,, 43' + '\n')
            f.write('csys, 0' + '\n')
            f.write('cm,'+ stru_elem + '_C2,elem' + '\n')
            # f.write('view = 11' + '\n')
            f.write('usePartialResults=1' + '\n')
            f.write('\n')
            f.write('\n')
            # view = pattern[stru_elem]
            f.write('!!Selection of the lower basemat SHEAR - Shear LB slab' + '\n')
            f.write('csys,0' + '\n')
            f.write('esel,s,cent,z,-12.30,-11' + '\n')
            f.write('nsle' + '\n')
            f.write('nsel,r,loc,z,-12.35,12.1' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('nsle' + '\n')
            f.write('esel,r,cent,z,-12.35' + '\n')
            f.write('cm,B2_1,elem' + '\n')
            f.write('esel,s,cent,z,-12.35' + '\n')
            f.write('esel,r,cent,x,34,36.5' + '\n')
            f.write('nsle' + '\n')
            f.write('cm,B2_2,elem' + '\n')
            f.write('cmsel,s,B2_1' + '\n')
            f.write('cmsel,a,B2_2' + '\n')
            f.write('cm,B2_0,elem' + '\n')
            f.write('esel,s,type,,12' + '\n')
            f.write('cm,ASB_ALL,elem' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('esel,r,cent,z,-12.35' + '\n')
            f.write('nsle' + '\n')
            f.write('cm,LB,elem' + '\n')
            f.write('cmsel,s,B2_0' + '\n')
            f.write('cmsel,a,LB' + '\n')
            f.write('cm,B2_ALL_1,elem' + '\n')
            f.write('!Columns refinement' + '\n')
            f.write('cmsel,s,B2_ALL_1' + '\n')
            f.write('esel,r,cent,x,-53,-40' + '\n')
            f.write('esel,r,cent,y,-18,25.5' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('cm,B2_3,elem' + '\n')
            f.write('!inner circ wall refinement' + '\n')
            f.write('!cylindrics coords.' + '\n')
            f.write('csys,1' + '\n')
            f.write('esel,s,cent,z,-12.35' + '\n')
            f.write('cmsel,s,B2_ALL_1' + '\n')
            f.write('esel,r,cent,x,23.5,26' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('cm,B2_4,elem' + '\n')
            f.write('cmsel,s,B2_ALL_1' + '\n')
            f.write('cmsel,a,B2_3' + '\n')
            f.write('cmsel,a,B2_4' + '\n')
            f.write('cm,B2_ALL_2,elem' + '\n')
            f.write('!ele by ele refinement' + '\n')
            f.write('cmsel,s,B2_all_2' + '\n')
            f.write('esel,a,elem,,18253' + '\n')
            f.write('esel,a,elem,,18369' + '\n')
            f.write('esel,a,elem,,18378' + '\n')
            f.write('esel,a,elem,,18386' + '\n')
            f.write('esel,a,elem,,18388' + '\n')
            f.write('esel,a,elem,,18390' + '\n')
            f.write('esel,a,elem,,18393' + '\n')
            f.write('esel,a,elem,,18396' + '\n')
            f.write('esel,a,elem,,18487' + '\n')
            f.write('esel,a,elem,,18611' + '\n')
            f.write('esel,a,elem,,18747' + '\n')
            f.write('esel,a,elem,,18756' + '\n')
            f.write('esel,a,elem,,18757' + '\n')
            f.write('esel,a,elem,,18763' + '\n')
            f.write('esel,a,elem,,20028' + '\n')
            f.write('esel,a,elem,,20664' + '\n')
            f.write('esel,a,elem,,20666' + '\n')
            f.write('esel,a,elem,,20667' + '\n')
            f.write('esel,a,elem,,20672' + '\n')
            f.write('esel,a,elem,,20685' + '\n')
            f.write('esel,a,elem,,20787' + '\n')
            f.write('esel,a,elem,,20790' + '\n')
            f.write('esel,a,elem,,20796' + '\n')
            f.write('esel,a,elem,,20805' + '\n')
            f.write('esel,a,elem,,20827' + '\n')
            f.write('esel,a,elem,,21238' + '\n')
            f.write('esel,a,elem,,21240' + '\n')
            f.write('esel,a,elem,,21289' + '\n')
            f.write('esel,a,elem,,21299' + '\n')
            f.write('esel,a,elem,,21304' + '\n')
            f.write('esel,a,elem,,21516' + '\n')
            f.write('esel,a,elem,,21523' + '\n')
            f.write('esel,a,elem,,22182' + '\n')
            f.write('esel,a,elem,,22538' + '\n')
            f.write('esel,a,elem,,22542' + '\n')
            f.write('esel,a,elem,,22543' + '\n')
            f.write('esel,a,elem,,22546' + '\n')
            f.write('esel,a,elem,,22550' + '\n')
            f.write('esel,a,elem,,22554' + '\n')
            f.write('esel,a,elem,,22555' + '\n')
            f.write('esel,a,elem,,22560' + '\n')
            f.write('esel,a,elem,,22634' + '\n')
            f.write('esel,a,elem,,23090' + '\n')
            f.write('esel,a,elem,,23091' + '\n')
            f.write('esel,a,elem,,23141' + '\n')
            f.write('esel,a,elem,,23142' + '\n')
            f.write('esel,a,elem,,23143' + '\n')
            f.write('esel,a,elem,,23201' + '\n')
            f.write('esel,a,elem,,23207' + '\n')
            f.write('esel,a,elem,,23212' + '\n')
            f.write('esel,a,elem,,23293' + '\n')
            f.write('esel,a,elem,,23309' + '\n')
            f.write('esel,a,elem,,23455' + '\n')
            f.write('esel,a,elem,,23493' + '\n')
            f.write('esel,a,elem,,23499' + '\n')
            f.write('esel,a,elem,,23505' + '\n')
            f.write('esel,a,elem,,23520' + '\n')
            f.write('esel,a,elem,,23521' + '\n')
            f.write('esel,a,elem,,23529' + '\n')
            f.write('esel,a,elem,,23546' + '\n')
            f.write('esel,a,elem,,23677' + '\n')
            f.write('esel,a,elem,,25643' + '\n')
            f.write('esel,a,elem,,26237' + '\n')
            f.write('cm,SHEAR_1,elem' + '\n')
            f.write('esel,r,ename,,43' + '\n')
            f.write('cmsel,s,SHEAR_1' + '\n')
            f.write('csys,1' + '\n')
            f.write('esel,r,cent,x,14,8' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('nsle' + '\n')
            f.write('esln' + '\n')
            f.write('cm,SHEAR_2,elem' + '\n')
            f.write('cmsel,s,SHEAR_1' + '\n')
            f.write('cmsel,a,SHEAR_2' + '\n')
            f.write('cm,shear_' + stru_elem + ',elem' + '\n')
            f.write('\n')
        elif re.search(r'Bioshield', stru_elem):
            for stru_elem in stru_elems:
                if stru_elem == 'Bioshield_SE':
                    # view = pattern['BIO'][stru_elem]
                    f.write('!!Selection of the Bioshield - Wall South-East' + '\n')
                    f.write('NSEL, S, LOC, X, -0.1, 15.335\n')
                    f.write('NSEL, R, LOC, Y, -15.104, 0.1\n')
                    f.write('NSEL, R, LOC, Z, -12.4, -5.45\n')
                    f.write('ESLN, S, 1, ALL\n')
                    f.write('esel, r, real,, 160\n')
                    f.write('ESEL, R, TYPE,, 7\n')
                    f.write('nsle, s, 1\n')
                    f.write('cm,'+ stru_elem + ',elem' + '\n')
                    # f.write('view = 22' + '\n')
                    f.write('usePartialResults=1' + '\n')
                    f.write( '\n')
                elif stru_elem == 'Bioshield_EN':
                    # view = 20
                    # view = pattern['BIO'][stru_elem]
                    f.write('!!Selection of the Bioshield - Wall East-North' + '\n')
                    f.write('NSEL, S, LOC, X, -0.1, 15.335\n')
                    f.write('NSEL, R, LOC, Y, -0.1, 15.104\n')
                    f.write('NSEL, R, LOC, Z, -12.4, -5.45\n')
                    f.write('ESLN, S, 1, ALL\n')
                    f.write('esel, r, real,, 160\n')
                    f.write('ESEL, R, TYPE,, 7\n')
                    f.write('nsle, s, 1\n')
                    f.write('cm,'+ stru_elem + ',elem' + '\n')
                    # f.write('view = 20' + '\n')
                    f.write('usePartialResults=1' + '\n')
                    f.write('\n')
                elif stru_elem == 'Bioshield_NW':
                    # view = 19
                    # view = pattern['BIO'][stru_elem]
                    f.write('!!Selection of the Bioshield - Wall North-West' + '\n')
                    f.write('NSEL, S, LOC, X, -15.335, 0.1\n')
                    f.write('NSEL, R, LOC, Y, -0.1, 15.104\n')
                    f.write('NSEL, R, LOC, Z, -12.4, -5.45\n')
                    f.write('ESLN, S, 1, ALL\n')
                    f.write('esel, r, real,, 160\n')
                    f.write('ESEL, R, TYPE,, 7\n')
                    f.write('nsle, s, 1\n')
                    f.write('cm,'+ stru_elem + ',elem' + '\n')
                    # f.write('view = 19' + '\n')
                    f.write('usePartialResults=1' + '\n')
                    f.write( '\n')
                elif stru_elem == 'Bioshield_WS':
                    # view = 23
                    # view = pattern['BIO'][stru_elem]
                    f.write('!!Selection of the Bioshield - Wall West-South' + '\n')
                    f.write('NSEL, S, LOC, X, -15.335, 0.1\n')
                    f.write('NSEL, R, LOC, Y, -15.104, 0.1\n')
                    f.write('NSEL, R, LOC, Z, -12.4, -5.45\n')
                    f.write('ESLN, S, 1, ALL\n')
                    f.write('esel, r, real,, 160\n')
                    f.write('ESEL, R, TYPE,, 7\n')
                    f.write('nsle, s, 1\n')
                    f.write('cm,'+ stru_elem + ',elem' + '\n')
                    # f.write('view = 23' + '\n')
                    f.write('usePartialResults=1' + '\n')
                    f.write( '\n')
        elif re.search(r'CW|RW', stru_elem):
            f.write(f'!! Components of the structural element to be plotted: CROWN - Short and Long Circular Walls \n' )
            f.write(f'!! Auxiliary arrays (cos, sin, views...) \n')
            f.write(f'*dim,aa,array,6\n')
            f.write(f'*set,aa(1),1 !Short circular wall\n')
            f.write(f'*set,aa(2),5 !Short circular wall\n')
            f.write(f'*set,aa(3),9!Short circular wall\n')
            f.write(f'*set,aa(4),15!Short circular wall\n')
            f.write(f'*set,aa(5),3\n')
            f.write(f'*set,aa(6),17\n')
            f.write(f'\n')
            f.write(f'*dim,bb,array,6         !cosinus\n')
            f.write(f'*set,bb(1),-0.9848\n')
            f.write(f'*set,bb(2),0\n')
            f.write(f'*set,bb(3),0.9848\n')
            f.write(f'*set,bb(4),-0.3420\n')
            f.write(f'*set,bb(5),-0.6428\n')
            f.write(f'*set,bb(6),-0.8660\n')
            f.write(f'\n')
            f.write(f'*dim,cc,array,6          !sinus\n')
            f.write(f'*set,cc(1),-0.1736\n')
            f.write(f'*set,cc(2),-1\n')
            f.write(f'*set,cc(3),-0.1736\n')
            f.write(f'*set,cc(4),0.9397\n')
            f.write(f'*set,cc(5),-0.7660\n')
            f.write(f'*set,cc(6),0.5\n')
            f.write(f'\n')
            f.write(f'*dim,dd,array,6\n')
            f.write(f'*set,dd(1),4.31504062816\n')
            f.write(f'*set,dd(2),-0.726625362900E-01\n')
            f.write(f'*set,dd(3),-0.549202160984\n')
            f.write(f'*set,dd(4),0.127381808570\n')
            f.write(f'*set,dd(5),2.09483746371\n')
            f.write(f'*set,dd(6),0.748806535319E-01\n')
            f.write(f'\n')
            f.write(f'*dim,ee,array,6\n')
            f.write(f'*set,ee(1),0.825090282390\n')
            f.write(f'*set,ee(2),2.68820594049\n')
            f.write(f'*set,ee(3),-0.151133129637E-01\n')
            f.write(f'*set,ee(4),0.231126675956\n')
            f.write(f'*set,ee(5),2.68820594049\n')
            f.write(f'*set,ee(6),0.140194675430\n')
            f.write(f'\n')
            f.write(f'!! All circular walls')
            f.write(f'\n')
            f.write(f'csys,1\n')
            f.write(f'allsel\n')
            f.write(f'esel,s,real,,157\n')
            f.write(f'esel,u,esys,,88,128,40\n')
            f.write(f'esel,r,cent,x,0,10.68\n')
            f.write(f'\n')
            f.write(f'cm,short_circular_walls_all,elem\n')
            f.write(f'!---------------------\n')
            f.write(f'!Elements representing steel transition piece (STP) are not considered\n')
            f.write(f'!(see section 6.3 of ENG-51-CR-110011-CW-v03.0)\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,159,165\n')
            f.write(f'nsel,r,loc,z,-9.39,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_1,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,176,180\n')
            f.write(f'nsel,r,loc,z,-9.39,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_2,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,79,85\n')
            f.write(f'nsel,r,loc,z,-9.38,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_3,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,95.5,101\n')
            f.write(f'nsel,r,loc,z,-9.38,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_4,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,0,4.3\n')
            f.write(f'nsel,r,loc,z,-9.38,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_5,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,15.6,21\n')
            f.write(f'nsel,r,loc,z,-9.38,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_6,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,-81,-75.3\n')
            f.write(f'nsel,r,loc,z,-9.37,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_7,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,-64.5,-59\n')
            f.write(f'nsel,r,loc,z,-9.37,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_8,elem\n')
            f.write(f'\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'!Removed elements\n')
            f.write(f'esel,s,sec,,130\n')
            f.write(f'esel,a,sec,,131\n')
            f.write(f'esel,a,sec,,132\n')
            f.write(f'nsle\n')
            f.write(f'nsel,u,,,23469\n')
            f.write(f'esln\n')
            f.write(f'esel,r,type,,7\n')
            f.write(f'cm,STP_elem,elem\n')
            f.write(f'\n')
            f.write(f'\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,STP_1,elem\n')
            f.write(f'cmsel,a,STP_2,elem\n')
            f.write(f'cmsel,a,STP_3,elem\n')
            f.write(f'cmsel,a,STP_4,elem\n')
            f.write(f'cmsel,a,STP_5,elem\n')
            f.write(f'cmsel,a,STP_6,elem\n')
            f.write(f'cmsel,a,STP_7,elem\n')
            f.write(f'cmsel,a,STP_8,elem\n')
            f.write(f'cm,STP_short,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,short_circular_walls_all,elem\n')
            f.write(f'cmsel,u,STP_1,elem\n')
            f.write(f'cmsel,u,STP_2,elem\n')
            f.write(f'cmsel,u,STP_3,elem\n')
            f.write(f'cmsel,u,STP_4,elem\n')
            f.write(f'cmsel,u,STP_5,elem\n')
            f.write(f'cmsel,u,STP_6,elem\n')
            f.write(f'cmsel,u,STP_7,elem\n')
            f.write(f'cmsel,u,STP_8,elem\n')
            f.write(f'cm,short_circular_walls,elem\n')
            f.write(f'\n')
            f.write(f'!------------------------------------------------------\n')
            f.write(f'!Definition of components\n')
            f.write(f'!------------------------------------------------------\n')
            f.write(f'\n')
            f.write(f'!Radial Walls\n')
            f.write(f'\n')
            f.write(f'allsel\n')
            f.write(f'esel,s,real,,157\n')
            f.write(f'esel,r,esys,,88,128,40\n')
            f.write(f'\n')
            f.write(f'cm,circular_walls_all,elem\n')
            f.write(f'\n')
            f.write(f'!Elements representing steel transition piece (STP) are not considered\n')
            f.write(f'!(see section 6.3 of ENG-51-CR-110011-CW-v03.0)\n')
            f.write(f'\n')
            f.write(f'csys,1\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,39,45\n')
            f.write(f'nsel,r,loc,z,-9.36,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_1,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,55,60.1\n')
            f.write(f'nsel,r,loc,z,-9.36,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_2,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,-24.3,-20\n')
            f.write(f'nsel,r,loc,z,-9.37,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_3,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,circular_walls_all,elem\n')
            f.write(f'eplot\n')
            f.write(f'nsle,r,all\n')
            f.write(f'nsel,r,loc,y,-40,-35.4\n')
            f.write(f'nsel,r,loc,z,-9.38,-7.98\n')
            f.write(f'esln,r,1\n')
            f.write(f'cm,STP_4,elemv\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,circular_walls_all,elem\n')
            f.write(f'cmsel,u,STP_1,elem\n')
            f.write(f'cmsel,u,STP_2,elem\n')
            f.write(f'cmsel,u,STP_3,elem\n')
            f.write(f'cmsel,u,STP_4,elem\n')
            f.write(f'cm,circular_walls,elem\n')
            f.write(f'\n')
            f.write(f'alls\n')
            f.write(f'cmsel,s,STP_1,elem\n')
            f.write(f'cmsel,a,STP_2,elem\n')
            f.write(f'cmsel,a,STP_3,elem\n')
            f.write(f'cmsel,a,STP_4,elem\n')
            f.write(f'cm,STP_long,elem\n')
            f.write(f'\n')
            f.write(f'!----------------------------------------------\n')
            f.write(f'!----------------------------------------\n')
            f.write(f'alls,\n')
            f.write(f'cmsel,s,STP_short,elem\n')
            f.write(f'cmsel,a,STP_long,elem\n')
            f.write(f'cm,STP_elem,elem\n')
            f.write(f'alls\n')
            for stru_elem in stru_elems:
                if 'CW' in stru_elem:
                    f.write(f'!!Selection of the {pattern["CROWN"][stru_elem][2]} circular wall - {pattern["CROWN"][stru_elem][0]} to {pattern["CROWN"][stru_elem][1]}' + '\n')
                    f.write(f'csys,1\n')
                    f.write(f'esel,,real,,157\n')
                    f.write(f'nsle\n')
                    f.write(f'nsel,,loc,x,10.2,10.7\n')
                    f.write(f'nsel,r,loc,z,-12.36,-7.9\n')
                    # f.write(f'nsel,r,loc,y,20*(%aa(i)%-1)-2,20*%aa(i)%+2\n')
                    f.write(f'nsel,r,loc,y,{pattern["CROWN"][stru_elem][0]}-2,{pattern["CROWN"][stru_elem][1]}+2\n')
                    f.write(f'esln,r,1\n')
                    f.write(f'cmsel,u,STP_elem\n')
                    f.write(f'dsys,0\n')
                    f.write(f'cm,{stru_elem},elem\n')
            f.write(f"!------------------------------------------------------\n")
            f.write(f"!Definition of components\n")
            f.write(f"!------------------------------------------------------\n")
            f.write(f"\n")
            f.write(f"!Radial Walls\n")
            f.write(f"\n")
            f.write(f"allsel\n")
            f.write(f"csys,1\n")
            f.write(f"esel,s,real,,155\n")
            f.write(f"esel,a,real,,162\n")
            f.write(f"esel,r,cent,x,0,20\n")
            f.write(f"cm,radial_walls_all,elem\n")
            f.write(f"\n")
            f.write(f"!Elements representing steel transition piece are not considered\n")
            f.write(f"!(see section 6.3 of ENG-51-CR-110011-CW-v03.0)\n")
            f.write(f"\n")
            f.write(f"eplot\n")
            f.write(f"nsle,r,alls\n")
            f.write(f"nsel,r,loc,x,0,11.90\n")
            f.write(f"nsel,r,loc,z,-9.31,-7.98\n")
            f.write(f"esln,r,1\n")
            f.write(f"\n")
            f.write(f"cm,steel_transition_piece,elem\n")
            f.write(f"\n")
            f.write(f"alls\n")
            f.write(f"cmsel,s,radial_walls_all,elem\n")
            f.write(f"cmsel,u,steel_transition_piece,elem\n")
            f.write(f"cm,radial_walls,elem\n")
        # total = len(structure)
        f.write(f'\n')
        if 'Bio' in stru_elem:
            f.write(f'/mkdir,.\{input_folder}\BIO \n')
            f.write(f'*cfo,.\{input_folder}\BIO\warnings,txt,, \n')
            f.write(f'*vwr \n')
            f.write(f"Warning file generated the {time_start} by {user}\n")
            f.write(f'*vwr \n')
            f.write(f"FILE NAME \t WARNING \t FOLDER \n")
            # / inquire, scrap, DATE,\\io - ws - ccstore1\03.Ansys\01_5X\01_Config1\02_LC\Output\ % LCa %, % extLC %
            # date_ = nint(scrap)
            # time_ = nint(1e6 * (scrap - nint(scrap)))
            f.write(f'*cfc \n')
        elif 'CW' in stru_elem:
            f.write(f'/mkdir,.\{input_folder}\CROWN\CW \n')
            f.write(f'*cfo,.\{input_folder}\CROWN\CW\warnings,txt,, \n')
            f.write(f'*vwr \n')
            f.write(f"Warning file generated the {time_start} by {user}\n")
            f.write(f'*vwr \n')
            f.write(f"FILE NAME \t WARNING \t FOLDER \n")
            f.write(f'*cfc \n')
        elif 'RW' in stru_elem:
            f.write(f'/mkdir,.\{input_folder}\CROWN\RW \n')
            f.write(f'*cfo,.\{input_folder}\CROWN\RW\warnings,txt,, \n')
            f.write(f'*vwr \n')
            f.write(f"Warning file generated the {time_start} by {user}\n")
            f.write(f'*vwr \n')
            f.write(f"FILE NAME \t WARNING \t FOLDER \n")
            f.write(f'*cfc \n')
        else:
            f.write(f'/mkdir,.\{input_folder}\{stru_elem}\n')
            f.write(f'*cfo,.\{input_folder}\{stru_elem}\warnings,txt,, \n')
            f.write(f'*vwr \n')
            f.write(f"('Warning file generated the {time_start} by {user}')\n")
            f.write(f'*vwr \n')
            f.write(f"FILE NAME \t WARNING \t FOLDER \n")
            f.write(f'*cfc \n')
        f.write( '\n')
        f.write( '*do,ii,1,' + str(len(structure)) + ',1' + '\n')
        for i in range(0,len(structure)):
            if i == 0:
                f.write('   *if,ii,eq,' + str(i+1) + ',then' + '\n')
                # f.write("       name='" + stru_elem + "'\n")
                f.write("       name='" + names[i] + "'\n")
                if 'C2' in names[i]:
                    f.write("       conf = 2" + "\n")
                else:
                    f.write("       conf = 1" + "\n")
                if 'SL' and 'cII' in names[i]:
                    f.write("       target_margin = 1.101   !SL cat I/II"+ "\n")
                elif 'SL' and 'cIV' in names[i]:
                    f.write("       target_margin = 1.051   !SL cat III/IV"+ "\n")
                elif 'SL' and 'cV' in names[i]:
                    f.write("       target_margin = 1.052   !SL cat V"+ "\n")
                elif 'VDE' and 'cII' in names[i]:
                    f.write("       target_margin = 1.138   !VDE cat I/II"+ "\n")
                elif 'SL' and 'cIV' in names[i]:
                    f.write("       target_margin = 1.108   !VDE cat III/IV"+ "\n")
                elif 'SL' and 'cV' in names[i]:
                    f.write("       target_margin = 1.051   !VDE cat V"+ "\n")
                else :
                    f.write("       target_margin = 1" + "\n")
                f.write('       allsel,all' + '\n')
                f.write(f"       /inquire,filesize,size,{folder[i]}\\{structure[i]},inp \n")
                f.write(f"       fkb = filesize*1024       \n")
                f.write(f"          *if, fkb, lt, 5, then \n")
                if 'Bio' in stru_elem:
                    f.write(f'          *cfo,.\{input_folder}\BIO\warnings,txt,,append \n')
                    f.write(f'          *vwr \n')
                    f.write(f"          ('{structure[i]},inp\tNO RESULTS\t{folder[i]}')\n")
                    # f.write(f"          ('The file {folder[i]}\\{structure[i]},inp is empty, to relaunch')\n")
                    f.write(f'          *cfc \n')
                else:
                    f.write(f'          *cfo,.\{input_folder}\{stru_elem}\warnings,txt,,append \n')
                    f.write(f'          *vwr \n')
                    f.write(f"          ('{structure[i]},inp\tNO RESULTS\t{folder[i]}')\n")
                    f.write(f'          *cfc \n')
                for etable in etables:
                    f.write(f"              ETABLE,{etable} \n")
                    # f.write(f"              DETAB, 261147,{etable},0 \n")
                f.write(f"          *else \n")
                f.write("               /input,'" + structure[i] + "','inp','"+ folder[i] + "\ '" + '\n')
                f.write(f"          *endif \n")
            elif i != 0:
                f.write('   *elseif,ii,eq,' + str(i+1) + ',then' + '\n')
                # f.write("       name='" + stru_elem + "'\n")
                f.write("       name='" + names[i] + "'\n")
                if 'C2' in names[i]:
                    f.write("       conf = 2" + "\n")
                else:
                    f.write("       conf = 1" + "\n")
                if 'SL' and 'cII' in names[i]:
                    f.write("       target_margin = 1.101   !SL cat I/II" + "\n")
                elif 'SL' and 'cIV' in names[i]:
                    f.write("       target_margin = 1.051   !SL cat III/IV" + "\n")
                elif 'SL' and 'cV' in names[i]:
                    f.write("       target_margin = 1.052   !SL cat V" + "\n")
                elif 'VDE' and 'cII' in names[i]:
                    f.write("       target_margin = 1.138   !VDE cat I/II" + "\n")
                elif 'SL' and 'cIV' in names[i]:
                    f.write("       target_margin = 1.108   !VDE cat III/IV" + "\n")
                elif 'SL' and 'cV' in names[i]:
                    f.write("       target_margin = 1.051   !VDE cat V" + "\n")
                else:
                    f.write("       target_margin = 1" + "\n")
                f.write('       allsel,all' + '\n')
                f.write(f"       /inquire,filesize,size,{folder[i]}\\{structure[i]},inp \n")
                f.write(f"       fkb = filesize*1024       \n")
                f.write(f"          *if, fkb, lt, 5, then \n")
                if 'Bio' in stru_elem:
                    f.write(f'          *cfo,.\{input_folder}\BIO\warnings,txt,,append \n')
                    f.write(f'          *vwr \n')
                    f.write(f"          ('{structure[i]},inp\tNO RESULTS\t{folder[i]}')\n")
                    f.write(f'          *cfc \n')
                else:
                    f.write(f'          *cfo,.\{input_folder}\{stru_elem}\warnings,txt,,append \n')
                    f.write(f'          *vwr \n')
                    f.write(f"          ('{structure[i]},inp\tNO RESULTS\t{folder[i]}')\n")
                    f.write(f'          *cfc \n')
                for etable in etables:
                    f.write(f"              ETABLE,{etable} \n")
                    # f.write(f"              DETAB, 261147,{etable},0 \n")
                f.write(f"          *else \n")
                f.write("               /input,'" + structure[i] + "','inp','" + folder[i] + "\ '" + '\n')
                f.write(f"          *endif \n")

        f.write('   *endif' + '\n')
        f.write('\n')
        counter = 1
        if re.search(r'Bioshield', stru_elem):
            f.write('*do,jj,1,4,1 \n')
            for stru_elem in stru_elems:
                view = pattern['BIO'][stru_elem]
                if counter == 1:
                    f.write('   *if,jj,eq,' + str(counter) + ',then \n')
                    f.write("        reinf_comp = '" + stru_elem + "'\n")
                else:
                    f.write('   *elseif,jj,eq,' + str(counter) + ',then \n')
                    f.write("        reinf_comp = '" + stru_elem + "'\n")
                if view == 11:
                    f.write("        /input,Input_macro_lineplan-11_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,0,0,1' + '\n')
                    f.write('        /VUP,,-x' + '\n')
                    f.write('        /ANG,1' + '\n')
                    f.write('        /ANG,1,90,ZS,1' + '\n')
                elif view == 12:
                    f.write("        /input,Input_macro_lineplan-12_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,0,-1,0' + '\n')
                    f.write('        /vup,,z' + '\n')
                    f.write('        /ANG,1' + '\n')
                elif view == 13:
                    f.write("        /input,Input_macro_lineplan-13_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,1' + '\n')
                    f.write('        /vup,,y' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view ==14:
                    f.write("        /input,Input_macro_lineplan-ang" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,1,0.5,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view ==15:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,0.4,-1,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view ==16:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,0.5,1,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view == 17:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,1,-0.66,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view == 18:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,0,1,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view == 19:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,-1,1,0' + '\n')
                    f.write('        /ANG,1,90,ZS' + '\n')
                elif view == 20:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,1,1,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view == 21:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,-1,0.33,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view == 22:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,1,-1,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                elif view == 23:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,-1,-1,0' + '\n')
                    f.write('        /ANG,1,90,ZS' + '\n')
                elif view == 24:
                    f.write("        /input,Input_macro_lineplan-ang_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write('        /REP,FAST' + '\n')
                    f.write('        /VIEW,1,-1,0,0' + '\n')
                    f.write('        /ANG,1,-90,ZS' + '\n')
                else:
                    f.write('        /VIEW,1,1,-1,1' + '\n')
                    f.write('        /ANG,1-90,ZS' + '\n')
                counter += 1
            f.write('   *endif\n')
            counter = 1
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f"*do,jj,1,{len(pattern['CROWN'])},1 \n")
            for stru_elem in stru_elems:
                # view = pattern['CROWN'][stru_elem]
                if counter == 1:
                    f.write('   *if,jj,eq,' + str(counter) + ',then \n')
                else:
                    f.write('   *elseif,jj,eq,' + str(counter) + ',then \n')
                if 'CW' in stru_elem:
                    f.write("        reinf_comp = '" + stru_elem + "'\n")
                    f.write("        !/input,Input_macro_lineplan-11_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
                    f.write("        cmsel,,%reinf_comp% \n")
                    f.write("        nsle \n")
                    f.write('        /REP,FAST' + '\n')
                    f.write(f'        /VIEW,1,{math.cos(math.radians(circular_walls_view[stru_elem]["bb"]))},{math.sin(math.radians(circular_walls_view[stru_elem]["cc"]))},0' + '\n')
                    f.write('        /VUP,1,Z' + '\n')
                    f.write('        /ANG,1' + '\n')
                    f.write(f'        /FOC,1,{circular_walls_view[stru_elem]["dd"]},{circular_walls_view[stru_elem]["ee"]},-10.3134957630' + '\n')
                    f.write('        /DIST,1,5' + '\n')
                    f.write('        /dscale,1,off' + '\n')
                    f.write('        /AUTO,1' + '\n')
                    f.write('        /REP,FAST' + '\n')
                elif 'RW' in stru_elem:
                    f.write(f"        csys,1 \n")
                    f.write(f"        cmsel,s,radial_walls,elem \n")
                    f.write(f"        alls,below,elem \n")
                    f.write(f"        nsel,r,loc,y,20*({counter-6}-1)-10,20*({counter-6}-1)+10 \n")
                    f.write(f"        esln,r,1 \n")
                    f.write(f"        cm,{stru_elem},elem \n")
                    f.write(f"        reinf_comp = '{stru_elem}' \n")
                    f.write(f"        dsys,1 \n")
                    f.write(f"        /view,1,0,-1,0 \n")
                    f.write(f"        /vup,1,z \n")
                    f.write(f"        /ang \n")
                    f.write(f"        /FOC,   1,   12.8385670721    ,   3.94929454584    ,  -10.2609282309 !0deg \n")
                    f.write('         /REP,FAST' + '\n')
                    f.write('         /DIST,1,4' + '\n')
                counter += 1
            f.write(f'    *endif \n')
            # f.write(f'*enddo \n')
        else:
            f.write("        /input,Input_macro_lineplan-11_" + stru_elem + ",inp,'" + path_Macros + "'" + '\n')
            f.write('        /REP,FAST' + '\n')
            f.write('        /VIEW,1,0,0,1' + '\n')
            f.write('        /VUP,,-x' + '\n')
            f.write('        /ANG,1' + '\n')
            f.write('        /ANG,1,90,ZS,1' + '\n')
            f.write('        /AUTO,1' + '\n')
            f.write('        /REP,FAST' + '\n')
        # f.write('   *endif' + '\n')
        f.write('\n')
        f.write('        ! Windows format definition:' + '\n')
        f.write('\n')
        f.write('        /PLOPTS,INFO,3' + '\n')
        f.write('        /PLOPTS,LEG1,1' + '\n')
        f.write('        /PLOPTS,LEG2,1' + '\n')
        f.write('        /PLOPTS,LEG3,1' + '\n')
        f.write('        /PLOPTS,FRAME,1' + '\n')
        f.write('        /PLOPTS,TITLE,1' + '\n')
        f.write('        /PLOPTS,MINM,0' + '\n')
        f.write('        /PLOPTS,FILE,0' + '\n')
        f.write('        /PLOPTS,LOGO,0' + '\n')
        f.write('        /PLOPTS,WINS,1' + '\n')
        f.write('        /PLOPTS,WP,0' + '\n')
        f.write('        /PLOPTS,DATE,0' + '\n')
        f.write('        /TRIAD,OFF' + '\n')
        f.write('        /UDOC,1,cntr,bottom' + '\n')
        f.write('        /RGB,INDEX,100,100,100,0' + '\n')
        f.write('        /RGB,INDEX,0,0,0,15' + '\n')
        f.write('\n')
        f.write('        ! Image format definition:' + '\n')
        f.write('\n')
        f.write('        /edge,1,1,' + '\n')
        f.write('        /gformat,F,3,2' + '\n')
        f.write('        /pnum,sval,0 ! 1 or 0 to show the values' + '\n')
        f.write('        /number,0' + '\n')
        f.write('        /graphics,power' + '\n')
        f.write('        /gfile,2400' + '\n')
        if re.search(r'LB',stru_elem):
            f.write('        cmsel,,LB' + '\n')
            f.write('        nsle' + '\n')
            f.write('        /rep' + '\n')
        # if re.search(r'Bioshield', stru_elem):
        #     f.write('        cmsel,,%reinf_comp%' + '\n')
        # elif re.search(r'LB', stru_elem):
        #     f.write('        cmsel,,LB' + '\n')
        # elif re.search(r'CW', stru_elem):
        #     f.write('        cmsel,,%reinf_comp%' + '\n')
        f.write('\n')
        f.write('        *DO,qNum,1,12,1' + '\n')
        f.write('                *if,qNum,EQ,1,then' + '\n')
        f.write("                        qnt = 'AXIUF'" + "\n")
        f.write('                        pletab,AXIUF,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,2,then' + '\n')
        f.write("                        qnt = 'AXSUF'" + "\n")
        f.write('                        pletab,AXSUF,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,3,then' + '\n')
        f.write("                        qnt = 'AYIUF'" + "\n")
        f.write('                        pletab,AYIUF,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,4,then' + '\n')
        f.write("                        qnt = 'AYSUF'" + "\n")
        f.write('                        pletab,AYSUF,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,5,then' + '\n')
        f.write("                        qnt = 'ATRUF'" + "\n")
        f.write('                        pletab,ATRUF,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,6,then' + '\n')
        f.write("                        qnt = 'LANDA_N'" + "\n")
        f.write('                        pletab,LANDA_N,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,7,then' + '\n')
        f.write("                        qnt = 'LANDA_N'" + "\n")
        f.write('                        pletab,LANDA_N,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,8,then' + '\n')
        f.write("                        qnt = 'AXI'" + "\n")
        f.write('                        pletab,AXI,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,9,then' + '\n')
        f.write("                        qnt = 'AXS'" + "\n")
        f.write('                        pletab,AXS,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,10,then' + '\n')
        f.write("                        qnt = 'AYI'" + "\n")
        f.write('                        pletab,AYI,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,11,then' + '\n')
        f.write("                        qnt = 'AYS'" + "\n")
        f.write('                        pletab,AYS,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *elseif,qNum,EQ,12,then' + '\n')
        f.write("                        qnt = 'ATR'" + "\n")
        f.write('                        pletab,ATR,NOAVG' + '\n')
        f.write('                        *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                *endif' + '\n')
        # f.write('        *ENDDO' + '\n')
        f.write('\n')
        # f.write('        *DO,qNum,1,12,1' + '\n')
        f.write('                *if,qNum,lt,6,then' + '\n')
        f.write('                        /CVAL,0.0,0.1,0.2,0.4,0.6,0.8,0.9,1,100,' + '\n')
        f.write('                        /COLOR,SMIN,BLUE' + '\n')
        f.write('                        /COLOR,CNTR,BLUE,1' + '\n')
        f.write('                        /COLOR,CNTR,CBLU,2' + '\n')
        f.write('                        /COLOR,CNTR,CYAN,3' + '\n')
        f.write('                        /COLOR,CNTR,GREE,4' + '\n')
        f.write('                        /COLOR,CNTR,YGRE,5' + '\n')
        f.write('                        /COLOR,CNTR,YELL,6' + '\n')
        f.write('                        /COLOR,CNTR,RED,7' + '\n')
        f.write('                        /COLOR,CNTR,LGRA,8' + '\n')
        f.write('                        /COLOR,SMAX,LGRA' + '\n')
        f.write('                        /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                        /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                *elseif,qNum,eq,6,then' + '\n')
        f.write('                        *if,target_margin,eq,1,then' + '\n')
        f.write('                           *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                           /CVAL,1,0.25,0.50,0.75,%target_margin%,5,10,15,100' + '\n')
        f.write('                           !~ /CVAL,ALL1,%IO_SF%,1.25,1.5,2,2.5,3,5,MaxCont !IO_SF to be defined as 1.101 !SL Cat. I/II - 1.051 !SL Cat III/IV - 1.052 !SL Cat v - 1.138 !VDE Cat II - 1.117 !VDE cat III/IV - 1.108 !VDE cat v - 1.051 !SL+VDE cat V' + '\n')
        f.write('                           /COLOR,SMIN,RED' + '\n')
        f.write('                           /COLOR,CNTR,RED,1' + '\n')
        f.write('                           /COLOR,CNTR,MRED,2' + '\n')
        f.write('                           /COLOR,CNTR,ORAN,3' + '\n')
        f.write('                           /COLOR,CNTR,YELL,4' + '\n')
        f.write('                           /COLOR,CNTR,LGRAY,5' + '\n')
        f.write('                           /COLOR,CNTR,LGRAY,6' + '\n')
        f.write('                           /COLOR,CNTR,LGRAY,7' + '\n')
        f.write('                           /COLOR,CNTR,DGRAY,8' + '\n')
        f.write('                           /COLOR,SMAX,DGRAY' + '\n')
        f.write('                           /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                           /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                        *else' + '\n')
        f.write('                           *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                           /CVAL,1,0.25,0.50,0.75,1,%target_margin%,5,10,100' + '\n')
        f.write('                           !~ /CVAL,ALL1,%IO_SF%,1.25,1.5,2,2.5,3,5,MaxCont !IO_SF to be defined as 1.101 !SL Cat. I/II - 1.051 !SL Cat III/IV - 1.052 !SL Cat v - 1.138 !VDE Cat II - 1.117 !VDE cat III/IV - 1.108 !VDE cat v - 1.051 !SL+VDE cat V' + '\n')
        f.write('                           /COLOR,SMIN,RED' + '\n')
        f.write('                           /COLOR,CNTR,RED,1' + '\n')
        f.write('                           /COLOR,CNTR,MRED,2' + '\n')
        f.write('                           /COLOR,CNTR,ORAN,3' + '\n')
        f.write('                           /COLOR,CNTR,YELL,4' + '\n')
        f.write('                           /COLOR,CNTR,BLUE,5' + '\n')
        f.write('                           /COLOR,CNTR,LGRAY,6' + '\n')
        f.write('                           /COLOR,CNTR,LGRAY,7' + '\n')
        f.write('                           /COLOR,CNTR,DGRAY,8' + '\n')
        f.write('                           /COLOR,SMAX,DGRAY' + '\n')
        f.write('                           /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                           /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                        *endif' + '\n')
        f.write('                *elseif,qNum,eq,7,then' + '\n')
        f.write('                        *if,target_margin,eq,1,then' + '\n')
        f.write('                           *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                           /CVAL,0,%target_margin%,1.25,1.5,2,2.5,3,5,MaxCont' + '\n')
        f.write('                           /COLOR,SMIN,LGRA' + '\n')
        f.write('                           /COLOR,CNTR,DGRA,1' + '\n')
        f.write('                           /COLOR,CNTR,YGRE,2' + '\n')
        f.write('                           /COLOR,CNTR,GREE,3' + '\n')
        f.write('                           /COLOR,CNTR,GCYA,4' + '\n')
        f.write('                           /COLOR,CNTR,CYAN,5' + '\n')
        f.write('                           /COLOR,CNTR,CBLU,6' + '\n')
        f.write('                           /COLOR,CNTR,BLUE,7' + '\n')
        f.write('                           /COLOR,CNTR,BMAG,8' + '\n')
        f.write('                           /COLOR,SMAX,BMAG' + '\n')
        f.write('                           /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                           /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                        *else' + '\n')
        f.write('                           *GET,MaxCont,PLNSOL,0,MAX' + '\n')
        f.write('                           /CVAL,0,1,%target_margin%,1.25,1.5,2,2.5,4,MaxCont' + '\n')
        f.write('                           /COLOR,SMIN,LGRA' + '\n')
        f.write('                           /COLOR,CNTR,LGRA,1' + '\n')
        f.write('                           /COLOR,CNTR,ORAN,2' + '\n')
        f.write('                           /COLOR,CNTR,GREE,3' + '\n')
        f.write('                           /COLOR,CNTR,GCYA,4' + '\n')
        f.write('                           /COLOR,CNTR,CYAN,5' + '\n')
        f.write('                           /COLOR,CNTR,CBLU,6' + '\n')
        f.write('                           /COLOR,CNTR,BLUE,7' + '\n')
        f.write('                           /COLOR,CNTR,BMAG,8' + '\n')
        f.write('                           /COLOR,SMAX,BMAG' + '\n')
        f.write('                           /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                           /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                        *endif' + '\n')
        f.write('                *elseif,qNum,gt,7,then' + '\n')
        f.write('                        /CVAL,1,15.7,40.2,62.83,94.3,125.6,165.9,250,300,' + '\n')
        f.write('                        /COLOR,SMIN,BLAC' + '\n')
        f.write('                        /COLOR,CNTR,BLAC,1' + '\n')
        f.write('                        /COLOR,CNTR,LGRA,2' + '\n')
        f.write('                        /COLOR,CNTR,DGRA,3' + '\n')
        f.write('                        /COLOR,CNTR,BLUE,4' + '\n')
        f.write('                        /COLOR,CNTR,GREE,5' + '\n')
        f.write('                        /COLOR,CNTR,YELL,6' + '\n')
        f.write('                        /COLOR,CNTR,ORAN,7' + '\n')
        f.write('                        /COLOR,CNTR,RED,8' + '\n')
        f.write('                        /COLOR,SMAX,BMAG' + '\n')
        f.write('                        /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                        /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                *elseif,qNum,eq,12,then' + '\n')
        f.write('                        /CVAL,1,5.7,14.7,28.3,33.9,38.5,45.2,53.8,100,' + '\n')
        f.write('                        /COLOR,SMIN,BLAC' + '\n')
        f.write('                        /COLOR,CNTR,BLAC,1' + '\n')
        f.write('                        /COLOR,CNTR,LGRA,2' + '\n')
        f.write('                        /COLOR,CNTR,DGRA,3' + '\n')
        f.write('                        /COLOR,CNTR,BLUE,4' + '\n')
        f.write('                        /COLOR,CNTR,GREE,5' + '\n')
        f.write('                        /COLOR,CNTR,YELL,6' + '\n')
        f.write('                        /COLOR,CNTR,ORAN,7' + '\n')
        f.write('                        /COLOR,CNTR,RED,8' + '\n')
        f.write('                        /COLOR,SMAX,BMAG' + '\n')
        f.write('                        /RGB,INDEX,100,100,100,0' + '\n')
        f.write('                        /RGB,INDEX,0,0,0,15' + '\n')
        f.write('                *endif' + '\n')
        # if 'Bio' in stru_elem:
        #     f.write(f'                /mkdir,.\{input_folder}\BIO \n')
        # else:
        #     f.write(f'                /mkdir,.\{input_folder}\{stru_elem} \n')
        f.write('                *IF,qNum,EQ,1,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        # elif 'CW' in stru_elem:
        #     f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Bending' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Bending' + '\n')
        # f.write('                        /view,1,0,0,1' + '\n')
        f.write("                        qnt = 'AXIUF'" + '\n')
        f.write('                        pletab,AXIUF,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_{stru_elem}_%qnt%,png \n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_{stru_elem}_%qnt%,png \n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,2,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Bending' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Bending' + '\n')
        # f.write('                        /view,1,0,0,1' + '\n')
        f.write("                        qnt = 'AXSUF'" + '\n')
        f.write('                        pletab,AXSUF,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,3,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Bending' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Bending' + '\n')
        # f.write('                        /view,1,0,0,1' + '\n')
        f.write("                        qnt = 'AYIUF'" + '\n')
        f.write('                        pletab,AYIUF,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,4,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Bending' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Bending' + '\n')
        # f.write('                        /view,1,0,0,1' + '\n')
        f.write("                        qnt = 'AYSUF'" + '\n')
        f.write('                        pletab,AYSUF,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
          f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
          # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
          # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,5,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Shear' + '\n')
        else:
            # f.write('                        cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        cmsel,u,shear_' + stru_elem + '\n')
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                           cmsel,u,shear_' + stru_elem + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Shear' + '\n')
        f.write('                        /show,png' + '\n')
        f.write("                        qnt = 'ATRUF'" + '\n')
        f.write('                        pletab,ATRUF,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
           f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
           # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
           # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,6,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Landa_N' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Landa_N' + '\n')
        f.write("                        qnt = 'LANDA_N'" + '\n')
        f.write('                        pletab,LANDA_N,NOAVG' + '\n')
        f.write('                        !~ *GET,MaxLN,PLNSOL,0,MAX' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%_positive,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%_positive,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%_positive,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%_positive,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,7,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -%reinf_comp%- Landa_N' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Safety factor in %name% -' + stru_elem + '- Landa_N' + '\n')
        f.write("                        qnt = 'LANDA_N'" + '\n')
        f.write('                        pletab,LANDA_N,NOAVG' + '\n')
        f.write('                        !~ *GET,MaxLN,PLNSOL,0,MAX' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%_negative,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%_negative,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%_negative,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%_negative,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,8,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -%reinf_comp%- AXI' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -' + stru_elem + '- AXI' + '\n')
        f.write("                        qnt = 'AXI'" + '\n')
        f.write('                        pletab,AXI,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,9,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -%reinf_comp%- AXS' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -' + stru_elem + '- AXS' + '\n')
        # f.write('                        /view,1,0,0,1' + '\n')
        f.write("                        qnt = 'AXS'" + '\n')
        f.write('                        pletab,AXS,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,10,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -%reinf_comp%- AYI' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -' + stru_elem + '- AYI' + '\n')
        f.write("                        qnt = 'AYI'" + '\n')
        f.write('                        pletab,AYI,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSEIF,qNum,EQ,11,THEN' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -%reinf_comp%- AYS' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -' + stru_elem + '- AYS' + '\n')
        # f.write('                        /view,1,0,0,1' + '\n')
        f.write("                        qnt = 'AYS'" + '\n')
        f.write('                        pletab,AYS,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
            f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ELSE' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'                        cmsel,,%reinf_comp% \n')
        elif 'CW' in stru_elem or 'RW' in stru_elem:
            f.write(f'                        !cmsel,,%reinf_comp% \n')
        else:
            f.write('                        cmsel,,' + stru_elem + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -%reinf_comp%- ATR' + '\n')
        else:
            f.write('                        *IF,conf,EQ,2,THEN' + '\n')
            f.write('                           cmsel,,' + stru_elem + '_C2' + '\n')
            f.write('                        *ENDIF' + '\n')
            f.write('                        /show,png' + '\n')
            f.write('                        /title, Total demand in %name% -' + stru_elem + '- ATR' + '\n')
        f.write("                        qnt = 'ATR'" + '\n')
        f.write('                         pletab,ATR,NOAVG' + '\n')
        f.write('                        /show,close' + '\n')
        if stru_elem != 'B2' and stru_elem != 'LB':
            f.write(f'                        /rename,file000,png,,%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\BIO\%name%_%reinf_comp%_%qnt%,png' + '\n')
            # f.write('                        !/sys,del,file000.png' + '\n')
        else:
           f.write(f'                        /rename,file000,png,,%name%_' + stru_elem + '_%qnt%,png' + '\n')
           # f.write(f'                        /sys,move,file000,png,,.\{input_folder}\{stru_elem}\%name%_' + stru_elem + '_%qnt%,png' + '\n')
           # f.write('                        !/sys,del,file000.png' + '\n')
        f.write('                *ENDIF' + '\n')
        f.write('        *ENDDO' + '\n')
        f.write('   *enddo' + '\n')
        f.write('*enddo' + '\n')
        if 'Bio' in stru_elem:
            f.write(f'/sys,move,{path_Macros}*.png \t {path_Macros}' +f'{input_folder}' + '\BIO')
        elif 'CW' in stru_elem:
            f.write(f'/sys,move,{path_Macros}*.png \t {path_Macros}' + f'{input_folder}' + '\CROWN\CW')
        elif 'RW' in stru_elem:
            f.write(f'/sys,move,{path_Macros}*.png \t {path_Macros}' + f'{input_folder}' + '\CROWN\RW')
        else:
            f.write(f'/sys,move,{path_Macros}*.png \t {path_Macros}' +f'{input_folder}'+ '\\' + f'{stru_elem}')
        f.close()

    for key,name in lineplan.items():
        # for k, v in name.items():
        # if isinstance(name,dict):
        if element == 'B2' or element == 'LB':
            with open(os.path.join(path_out,'new_plots') + '\\Input_macro_lineplan-11_' + element + '.inp', 'w') as f:
                f.write(f'!!!!!! Grid lines generated for {element}\n')
                f.write('/ ANNO, DELE\n')
                f.write('ERASE\n')
                f.write('csys,0 \n')
                f.write('\n')
                f.write('!!!!!Grid Lines from  T1 to T15\n')
                f.write('\n')
                f.write('/AN3D,ANUM,0,102,0,0,0\n')
                f.write('\n')
                f.write('/AN3D,Line,-57.65,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-57.64,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-57.64,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T1\n')
                f.write('/AN3D,Line,-50.45,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-50.45,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-50.45,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T2\n')
                f.write('/AN3D,Line,-43.45,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-43.45,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-43.45,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T3\n')
                f.write('/AN3D,Line,-35.50,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-35.5,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-35.50,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T4\n')
                f.write('/AN3D,Line,-24.61,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-24.61,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-24.61,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T5\n')
                f.write('/AN3D,Line,-16.05,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-16.05,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-16.05,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T6\n')
                f.write('/AN3D,Line,-8.025,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,-8.025,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,-8.025,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T7\n')
                f.write('/AN3D,Line,0,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,0,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,0,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T8\n')
                f.write('/AN3D,Line,8.025,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,8.025,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,8.025,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T9\n')
                f.write('/AN3D,Line,16.05,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,16.05,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,16.05,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T10\n')
                f.write('/AN3D,Line,24.61,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,24.61,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,24.61,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T11\n')
                f.write('/AN3D,Line,35.5,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,35.5,' + str(lineplan[stru_elem]['Ymax'])+ '+0.4,0\n')
                f.write('/AN3D,TEXT,35.5,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T12\n')
                f.write('/AN3D,Line,42.5,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,42.5,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,42.5,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T13\n')
                f.write('/AN3D,Line,49.9,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,49.9,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,49.9,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T14\n')
                f.write('/AN3D,Line,58.55,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,0,58.55,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0\n')
                f.write('/AN3D,TEXT,58.55,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,0,T15\n')
                f.write('\n')
                f.write('!!!!!!Gird Lines from TA to TJ\n')
                f.write('\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,-35.5,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,-35.5,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,-35.5,0,TA\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,-24.6,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,-24.6,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,-24.6,0,TB\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,-15.8,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,-15.8,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,-15.8,0,TC\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,-7.9,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,-7.9,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,-7.9,0,TD\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,0,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,0,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,0,0,TE\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,7.9,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,7.9,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,7.9,0,TF\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,15.8,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,15.8,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,15.8,0,TG\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,24.6,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,24.6,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,24.6,0,TH\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,34,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,34,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,34.0,0,TI\n')
                f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-10,43.8,0,' + str(lineplan[stru_elem]['Xmax']) + '+10,43.8,0\n')
                f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-10,43.8,0,TJ\n')
        elif element == 'BIO':
            for stru_elem in stru_elems:
                with open(os.path.join(path_out,'new_plots') + '\\Input_macro_lineplan-ang_' + stru_elem + '.inp', 'w') as f:
                    f.write(f'!!!!!! Grid lines generated for {stru_elem}\n')
                    f.write('CSYS,0\n')
                    f.write('/ ANNO, DELE\n')
                    f.write('ERASE\n')
                    f.write('\n')
                    f.write('/AN3D,ANUM,0,102,0,0,0\n')
                    f.write('\n')
                    f.write('!!!!!!Grid Lines from Pit to Crane Level\n')
                    f.write('\n')
                    f.write('\n')
                    f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-13.97,' + str(lineplan[stru_elem]['Xmax']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymax']) + '+0.4,-13.97\n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-13.97,PIT                     \n')
                    f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-12.35,' + str(lineplan[stru_elem]['Xmax']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymax']) + '+0.4,-12.35\n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-12.35,B2                      \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,-9.4,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,-9.4    \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-9.4,B2M                       \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,-5.5,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,-5.5    \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-5.5,B1                        \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,-0.25,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,-0.25  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,-0.25,L1                       \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,5.155,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,5.155  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,5.155,L2                       \n')
                    f.write('/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,10.335,' + str(lineplan[stru_elem]['Xmax']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymax']) + '+0.4,10.335\n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,10.335,L3                      \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,11.95,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,11.95  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,11.95,L3M                      \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,17.40,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,17.40  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,17.40,L4                       \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,26.06,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,26.06  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,26.06,L5                       \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,33.66,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,33.66  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,33.66,R1                       \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,38,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,38        \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,38,R2                          \n')
                    f.write(
                        '/AN3D,Line,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(lineplan[stru_elem]['Ymin']) + '-0.4,42.22,' + str(
                            lineplan[stru_elem]['Xmax']) + '-0.4,' + str(lineplan[stru_elem]['Ymax']) + '+0.4,42.22  \n')
                    f.write('/AN3D,TEXT,' + str(lineplan[stru_elem]['Xmin']) + '-0.4,' + str(
                        lineplan[stru_elem]['Ymin']) + '-0.4,42.22,Crane_Level              \n')






